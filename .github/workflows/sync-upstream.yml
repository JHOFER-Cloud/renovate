name: Sync Fork with Upstream

on:
  schedule:
    # Run daily at 7 AM UTC
    - cron: '0 7 * * *'
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/renovatebot/renovate.git || true
          git fetch upstream

      - name: Check for updates
        id: check
        run: |
          git fetch origin
          BEHIND=$(git rev-list --count HEAD..upstream/main)
          echo "commits_behind=$BEHIND" >> $GITHUB_OUTPUT
          if [ "$BEHIND" -gt 0 ]; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
          fi

      - name: Create sync branch
        if: steps.check.outputs.has_updates == 'true'
        id: sync
        run: |
          BRANCH_NAME="sync-upstream"

          # Delete existing branch if it exists (locally and remotely)
          git branch -D "$BRANCH_NAME" 2>/dev/null || true
          git push origin --delete "$BRANCH_NAME" 2>/dev/null || true

          git checkout -b "$BRANCH_NAME"

          if git merge upstream/main --no-edit --no-ff; then
            echo "has_conflicts=false" >> $GITHUB_OUTPUT
            git push origin "$BRANCH_NAME"
          else
            echo "has_conflicts=true" >> $GITHUB_OUTPUT
            # For conflicts, add all files and commit to resolve the merge state
            git add .
            git commit -m "Sync with upstream - contains merge conflicts"
            git push origin "$BRANCH_NAME"
          fi
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Create Pull Request
        if: steps.check.outputs.has_updates == 'true'
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          if [ "${{ steps.sync.outputs.has_conflicts }}" == "true" ]; then
            TITLE="‚ö†Ô∏è Sync with upstream - CONFLICTS NEED RESOLUTION"
            BODY="## ‚ö†Ô∏è Manual Conflict Resolution Required

          This PR contains **merge conflicts** that need manual resolution before merging.

          **Upstream changes:** ${{ steps.check.outputs.commits_behind }} commits behind upstream

          GitHub will show the conflict markers in the Files tab. Resolve conflicts using GitHub's web interface or locally:

          1. **Check out this branch locally:**
             \`\`\`bash
             git fetch origin
             git checkout $BRANCH_NAME
             \`\`\`

          2. **Resolve conflicts** in the marked files

          3. **Complete the merge:**
             \`\`\`bash
             git add .
             git commit -m \"Resolve merge conflicts from upstream sync\"
             git push origin $BRANCH_NAME
             \`\`\`

          ---
          *This PR was automatically created by the [Sync Fork workflow](.github/workflows/sync-upstream.yml)*"
          else
            TITLE="üîÑ Sync with upstream renovatebot/renovate"
            BODY="This PR syncs the fork with the latest changes from upstream [renovatebot/renovate](https://github.com/renovatebot/renovate).

          **Changes:** ${{ steps.check.outputs.commits_behind }} commits behind upstream

          **Automated sync** - Review and merge to keep the fork up to date.

          ---
          *This PR was automatically created by the [Sync Fork workflow](https://github.com/JHOFER-Cloud/renovate/actions/workflows/sync-upstream.yml)*"
          fi

          gh pr create --repo ${{ github.repository }} \
            --title "$TITLE" \
            --body "$BODY" \
            --base main \
            --head "$BRANCH_NAME" \
            --reviewer ojsef39

      - name: No updates
        if: steps.check.outputs.has_updates == 'false'
        run: echo "‚úÖ Fork is already up to date with upstream"
